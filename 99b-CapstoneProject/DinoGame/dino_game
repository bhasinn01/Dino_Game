import pygame
import sys
import random

class Dino:
    def __init__(self, screen, x, y):
        self.screen = screen
        self.x = x
        self.y = y
        self.image = pygame.image.load("dino1.png")
        self.isjumping = False
        self.v = 7.5
        self.m = 1

    def draw(self):
        self.screen.blit(self.image, (self.x, self.y))

    def jump(self):
        if self.isjumping:
            F = (1 / 2) * self.m * (self.v ** 2)
            self.y -= F
            self.v = self.v - 1
            if self.v < 0:
                self.m = -1
            if self.v == -8.5:
                self.isjumping = False
                self.v = 7.5
                self.m = 1

    def duck(self):
       pass

class Ground:
    def __init__(self, screen, x, y):
        self.screen = screen
        self.x = x
        self.y = y
        self.image = pygame.image.load("ground.png")
        self.image2 = pygame.image.load("ground.png")
        self.speed = 5
        self.original_x = x

    def move(self):
        if (self.x < -1203):
            self.x = 0
        self.x = self.x - self.speed

    def draw(self):
        self.screen.blit(self.image, (self.x, self.y))
        self.screen.blit(self.image2, (self.x + 1203, self.y))

class Cloud:
    def __init__(self, screen, x):
        self.screen = screen
        self.image = pygame.image.load("Cloud.png")
        self.image2 = pygame.image.load("Cloud.png")
        self.image3 = pygame.image.load("Cloud.png")
        self.x = x
        self.y = random.randint(0, self.image.get_height())
        self.speed = 1
        self.image2_x = x + 300
        self.image3_x = x + 500
        self.image2_y = random.randint(0, self.image.get_height())
        self.image3_y = random.randint(0, self.image.get_height())

    def move(self):
        if (self.x < -self.image.get_width()):
            self.x = self.screen.get_width()
            self.y = random.randint(0, self.image.get_height())
        self.x = self.x - self.speed
        if (self.image2_x < -self.image.get_width()):
            self.image2_x = self.screen.get_width()
            self.image2_y = random.randint(0, self.image.get_height())
        self.image2_x = self.image2_x - self.speed
        if (self.image3_x < -self.image.get_width()):
            self.image3_x = self.screen.get_width()
            self.image3_y = random.randint(0, self.image.get_height())
        self.image3_x = self.image3_x - self.speed

    def draw(self):
        self.screen.blit(self.image, (self.x, self.y))
        self.screen.blit(self.image, (self.image2_x, self.image2_y))
        self.screen.blit(self.image2, (self.image3_x, self.image3_y))

class Cacti:
    def __init__(self, screen, x, y):
        self.screen = screen
        self.x = x
        self.y = y
        self.image = pygame.image.load("cacti-big1.png")
        self.image2 = pygame.image.load("cacti_big2.png")
        self.image3 = pygame.image.load("cacti_big4.png")
        self.image4 = pygame.image.load("cacti_small1.png")
        self.image5 = pygame.image.load("cacti_small2.png")
        self.image6 = pygame.image.load("cacti_small3.png")
        self.speed = 5
        self.x2 = x + 750
        self.y2 = y + 20

        number_list1 = [self.image, self.image2, self.image3]
        self.display_number1 = random.choice(number_list1)
        number_list2 = [self.image4, self.image5, self.image6]
        self.display_number2 = random.choice(number_list2)

    def move(self):
        number_list1 = [self.image, self.image2, self.image3]
        if (self.x < -self.display_number1.get_width()):
            self.x = 2 * self.screen.get_width()
            self.display_number1 = random.choice(number_list1)
        self.x = self.x - self.speed
        number_list2 = [self.image4, self.image5, self.image6]
        if (self.x2 < -self.display_number2.get_width()):
            self.x2 = 2 * self.screen.get_width()
            self.display_number2 = random.choice(number_list2)
        self.x2 = self.x2 - self.speed

    def draw(self):
        self.screen.blit(self.display_number1, (self.x, self.y))
        self.screen.blit(self.display_number2, (self.x2, self.y2))

def main():
    pygame.init()
    # Screen title
    pygame.display.set_caption("Dino Game")
    # Screen size
    screen = pygame.display.set_mode((800, 200))
    # Clock
    clock = pygame.time.Clock()

    cloud = Cloud(screen, random.randint(0, 500))
    ground = Ground(screen, 0, screen.get_height() - 19)
    cacti = Cacti(screen, 500, screen.get_height() - 80)
    dino = Dino(screen, 30, screen.get_height() - 56)

    while True:
        clock.tick(60)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sys.exit()

        screen.fill((235, 235, 235))

        pressed_keys = pygame.key.get_pressed()
        if dino.isjumping == False:
            if pressed_keys[pygame.K_SPACE] or pressed_keys[pygame.K_UP]:
                dino.isjumping = True
        dino.jump()

        cloud.move()
        cloud.draw()
        ground.move()
        ground.draw()
        cacti.move()
        cacti.draw()
        dino.draw()


        pygame.display.update()


main()

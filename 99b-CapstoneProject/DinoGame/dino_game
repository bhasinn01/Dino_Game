import pygame
import sys
import random

class Dino:
    def __init__(self, screen, x, y):
        self.screen = screen
        self.x = x
        self.y = y
        self.image = pygame.image.load("dino1.png")
        self.image.set_colorkey((235, 235, 235))
        self.isjumping = False
        self.v = 8
        self.m = 1

    def draw(self):
        self.screen.blit(self.image, (self.x, self.y))

    def jump(self):
        if self.isjumping:
            F = (1 / 2) * self.m * (self.v ** 2)
            self.y -= F
            self.v = self.v - 1
            if self.v < 0:
                self.m = -1
            if self.v == -9:
                self.isjumping = False
                self.v = 8
                self.m = 1

    def duck(self):
       pass

class Ground:
    def __init__(self, screen, x, y):
        self.screen = screen
        self.x = x
        self.y = y
        self.image = pygame.image.load("ground.png")
        self.speed = 5
        self.original_x = x

    def move(self):
        self.x = self.x - self.speed
        # if abs(self.x - self.original_x) > 1203:

    def draw(self):
        self.screen.blit(self.image, (self.x, self.y))

def main():
    pygame.init()
    pygame.display.set_caption("Dino Game")
    screen = pygame.display.set_mode((800, 200))

    clock = pygame.time.Clock()

    ground = Ground(screen, 0, screen.get_height() - 19)
    dino = Dino(screen, 30, screen.get_height() - 56)

    while True:
        clock.tick(60)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sys.exit()

        screen.fill((255, 255, 255))

        pressed_keys = pygame.key.get_pressed()
        if dino.isjumping == False:
            if pressed_keys[pygame.K_SPACE] or pressed_keys[pygame.K_UP]:
                dino.isjumping = True
        dino.jump()

        ground.move()
        ground.draw()
        dino.draw()


        pygame.display.update()


main()
